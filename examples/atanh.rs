use anyhow::Result;
use candle_core::{Device, Tensor};

fn atanh(x: &Tensor) -> Result<Tensor> {
    let x = x.clamp(-0.999999, 0.999999)?;
    Ok((0.5 * (((1. + &x)? / (1. - &x)?)?).log()?)?)
}

fn main() -> Result<()> {
    let x = Tensor::arange_step(-5f32, 5.0, 0.5, &Device::Cpu)?;
    let y = x.tanh()?;
    let z = atanh(&y)?;

    print!("x\n{}\n", x);
    print!("y\n{}\n", y);
    print!("z\n{}\n", z);

    // x
    // [-5.0000, -4.5000, -4.0000, -3.5000, -3.0000, -2.5000, -2.0000, -1.5000,
    // -1.0000, -0.5000,  0.0000,  0.5000,  1.0000,  1.5000,  2.0000,  2.5000,
    // 3.0000,  3.5000,  4.0000,  4.5000]
    // Tensor[[20], f32]
    // y
    // [-0.9999, -0.9998, -0.9993, -0.9982, -0.9951, -0.9866, -0.9640, -0.9051,
    // -0.7616, -0.4621,  0.0000,  0.4621,  0.7616,  0.9051,  0.9640,  0.9866,
    // 0.9951,  0.9982,  0.9993,  0.9998]
    // Tensor[[20], f32]
    // z
    // [-5.0001, -4.5001, -4.0000, -3.5000, -3.0000, -2.5000, -2.0000, -1.5000,
    // -1.0000, -0.5000,  0.0000,  0.5000,  1.0000,  1.5000,  2.0000,  2.5000,
    // 3.0000,  3.5000,  4.0000,  4.5001]

    Ok(())
}
